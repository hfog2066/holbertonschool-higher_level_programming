#include <Python.h>
#include <wchar.h>
#include <stdio.h>
#include <locale.h>


void print_python_string(PyObject *p)
{
	PyTypeObject *type;
	unsigned long size;
	void *string;
	PyASCIIObject *ascii;
	char *strtype;
	unsigned int i;
	unsigned short *wstring;
	unsigned char *wchar;


	printf("[.] string object info\n");
	type = p->ob_type;
	if (strcmp(type->tp_name, "str") != 0)
	{
		printf("  [ERROR] Invalid String Object\n");
		return;
	}

	size = ((PyVarObject *)p)->ob_size;
	ascii = (PyASCIIObject *) p;
	if (((ascii->state).compact == 1) && ((ascii->state).ascii == 1) &&
	    ((ascii->state).ready == 1))
		strtype = "compact ascii";
	if (((ascii->state).compact == 1) && ((ascii->state).ascii == 0) &&
	    ((ascii->state).ready == 1))
		strtype = "compact unicode object";
	printf("  type: %s\n", strtype);
	printf("  length: %lu\n", size);
	if (strcmp("compact ascii", strtype) == 0)
	{
		string = (ascii) + 1;
		printf("  value: %s\n", (char *) string);
	}
	if (strcmp("compact unicode object", strtype) == 0)
	{
		if ((ascii->state).kind == 2)
			wstring = ((unsigned short *)((PyCompactUnicodeObject*)
						      (p) + 1));
		if ((ascii->state).kind == 1)
			wchar = ((unsigned char *)((PyCompactUnicodeObject*)
						   (p) + 1));
		printf("  value: ");
		for (i = 0; i < size; i++)
		{
			if ((ascii->state).kind == 2)
				printf("%lc", wstring[i]);
			else if ((ascii->state).kind == 1)
				printf("%lc", wchar[i]);
		}
		printf("\n");
	}
}
